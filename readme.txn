# directories:
# - /compile/doc/stable-tx - the files in this dir
# - /compile/source/linux-stable-txn - the kernel sources checked out from gitrepo
# - /compile/result/stable-tx - the resulting kernel, modules etc. tar.gz files
# - /compile/doc/kernel-config-options - https://github.com/hexdump0815/kernel-config-options
# name: stb-txn - tegra x1 etc.

cd /compile/source/linux-stable-txn

# patches: none so far

export ARCH=arm64
scripts/kconfig/merge_config.sh -m arch/arm64/configs/defconfig /compile/doc/kernel-config-options/docker-options.cfg /compile/doc/kernel-config-options/options-to-remove-generic.cfg /compile/doc/stable-tx/misc.txn/options/options-to-remove-special.cfg /compile/doc/kernel-config-options/additional-options-generic.cfg /compile/doc/kernel-config-options/additional-options-aarch64.cfg /compile/doc/stable-tx/misc.txn/options/additional-options-special.cfg
( cd /compile/doc/kernel-config-options ; git rev-parse --verify HEAD ) > /compile/doc/stable-tx/misc.txn/options/kernel-config-options.version
make olddefconfig
make -j 4 Image dtbs modules
cd tools/perf
make
cd ../power/cpupower
make
cd ../../..
export kver=`make kernelrelease`
echo ${kver}
# remove debug info if there and wanted
# find . -type f -name '*.ko' | sudo xargs -n 1 objcopy --strip-unneeded
make modules_install
mkdir -p /lib/modules/${kver}/tools
cp -v tools/perf/perf /lib/modules/${kver}/tools
cp -v tools/power/cpupower/cpupower /lib/modules/${kver}/tools
cp -v tools/power/cpupower/libcpupower.so.0.0.1 /lib/modules/${kver}/tools/libcpupower.so.0
# make headers_install INSTALL_HDR_PATH=/usr
cp -v .config /boot/config-${kver}
# for rpi
cp -v arch/arm64/boot/Image /boot/Image-${kver}
# in case it is needed somewhere
#mkimage -A arm64 -O linux -T kernel -C none -a 0x1080000 -e 0x1080000 -n linux-${kver} -d arch/arm64/boot/Image /boot/uImage-${kver}
mkdir /boot/dtb-${kver}
cp -v arch/arm64/boot/dts/nvidia/*.dtb /boot/dtb-${kver}
cp -v System.map /boot/System.map-${kver}
cd /boot
update-initramfs -c -k ${kver}
#mkimage -A arm64 -O linux -T ramdisk -a 0x0 -e 0x0 -n initrd.img-${kver} -d initrd.img-${kver} uInitrd-${kver}
tar cvzf /compile/source/linux-stable-txn/${kver}.tar.gz /boot/*-${kver} /lib/modules/${kver}
cp -v /compile/doc/stable-tx/config.txn /compile/doc/stable-tx/config.txn.old
cp -v /compile/source/linux-stable-txn/.config /compile/doc/stable-tx/config.txn
cp -v /compile/source/linux-stable-txn/.config /compile/doc/stable-tx/config.txn-${kver}
cp -v /compile/source/linux-stable-txn/*.tar.gz /compile/result/stable-tx


# extlinux.conf
TIMEOUT 30

DEFAULT v5162

MENU TITLE nano boot options

LABEL v5162
      MENU LABEL linux v5.16.2
      LINUX ../Image-5.16.2-stb-txn
      INITRD ../initrd.img-5.16.2-stb-txn
      FDT ../dtb-5.16.2-stb-txn/tegra210-p3450-0000.dtb
      APPEND console=ttyS0,115200n8 console=tty0 root=LABEL=root rootwait ro fsck.fix=yes fsck.repair=yes net.ifnames=0 ipv6.disable=1 noresume loglevel=8

# some notes about getting the open source nouveau gpu driver working:
# see also: https://gitlab.freedesktop.org/mesa/mesa/-/issues/3505
# - a xorg server built from the latest sources is required (tested with sources from 04/2021)
# - a recent mesa might be required (not sure about this, tested with 21.0.1)
# - kernel cmdline nouveau.modeset=1 is required
# - performance is quite low due to low default gpu clock frequency
# - gpu clock frequency can be changed via /sys/kernel/debug/dri/128/pstate
#   - trying to do so can easily hang the system (maybe power supply issue? 5.1v/3a)
# - glmark2 is running well, but with some tiny artifacts here and there
# - a wayfire/wayland session seems to work, but with visual artifacts when scrolling in a terminal etc.
